@using Microsoft.AspNetCore.Builder
@using Microsoft.AspNetCore.Localization
@using Microsoft.AspNetCore.Mvc.Localization
@using Microsoft.Extensions.Options

@inject IViewLocalizer Localizer
@inject IOptions<RequestLocalizationOptions> LocOptions

@*
  @SharedLocalizer.GetLocalizedHtmlString("LANGUAGE")
  @SharedLocalizer.GetLocalizedHtmlString("SAVE")
*@

@{
  var requestCulture = Context.Features.Get<IRequestCultureFeature>();
  var cultureItems = LocOptions.Value.SupportedUICultures
      .Select(c => new SelectListItem { Value = c.Name, Text = c.DisplayName })
      .ToList();
}

<ul>
  @foreach (var item in LocOptions.Value.SupportedUICultures)
    { 
      <li>
        @if(requestCulture.RequestCulture.Culture.TwoLetterISOLanguageName == item.TwoLetterISOLanguageName)
        {
          <span class="selected-language">@item.TwoLetterISOLanguageName</span>
        }
        else 
        {
          <a asp-controller="SetLanguage"
             asp-action="Index"
             asp-route-culture="@item.Name" 
             asp-route-returnUrl="@Context.Request.Path">@item.TwoLetterISOLanguageName</a>  
        }
      </li>
    }
</ul>